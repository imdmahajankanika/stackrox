// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/continuous_integration.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetContinuousIntegrationConfigsResponse struct {
	Configs              []*storage.ContinuousIntegrationConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *GetContinuousIntegrationConfigsResponse) Reset() {
	*m = GetContinuousIntegrationConfigsResponse{}
}
func (m *GetContinuousIntegrationConfigsResponse) String() string { return proto.CompactTextString(m) }
func (*GetContinuousIntegrationConfigsResponse) ProtoMessage()    {}
func (*GetContinuousIntegrationConfigsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f535114bb7ad7d43, []int{0}
}
func (m *GetContinuousIntegrationConfigsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetContinuousIntegrationConfigsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetContinuousIntegrationConfigsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetContinuousIntegrationConfigsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContinuousIntegrationConfigsResponse.Merge(m, src)
}
func (m *GetContinuousIntegrationConfigsResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetContinuousIntegrationConfigsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContinuousIntegrationConfigsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContinuousIntegrationConfigsResponse proto.InternalMessageInfo

func (m *GetContinuousIntegrationConfigsResponse) GetConfigs() []*storage.ContinuousIntegrationConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *GetContinuousIntegrationConfigsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetContinuousIntegrationConfigsResponse) Clone() *GetContinuousIntegrationConfigsResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetContinuousIntegrationConfigsResponse)
	*cloned = *m

	if m.Configs != nil {
		cloned.Configs = make([]*storage.ContinuousIntegrationConfig, len(m.Configs))
		for idx, v := range m.Configs {
			cloned.Configs[idx] = v.Clone()
		}
	}
	return cloned
}

type RetrieveTokenForContinuousIntegrationRequest struct {
	IdToken              string                            `protobuf:"bytes,1,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	CiProvider           storage.ContinuousIntegrationType `protobuf:"varint,2,opt,name=ci_provider,json=ciProvider,proto3,enum=storage.ContinuousIntegrationType" json:"ci_provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RetrieveTokenForContinuousIntegrationRequest) Reset() {
	*m = RetrieveTokenForContinuousIntegrationRequest{}
}
func (m *RetrieveTokenForContinuousIntegrationRequest) String() string {
	return proto.CompactTextString(m)
}
func (*RetrieveTokenForContinuousIntegrationRequest) ProtoMessage() {}
func (*RetrieveTokenForContinuousIntegrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f535114bb7ad7d43, []int{1}
}
func (m *RetrieveTokenForContinuousIntegrationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RetrieveTokenForContinuousIntegrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RetrieveTokenForContinuousIntegrationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RetrieveTokenForContinuousIntegrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveTokenForContinuousIntegrationRequest.Merge(m, src)
}
func (m *RetrieveTokenForContinuousIntegrationRequest) XXX_Size() int {
	return m.Size()
}
func (m *RetrieveTokenForContinuousIntegrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveTokenForContinuousIntegrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveTokenForContinuousIntegrationRequest proto.InternalMessageInfo

func (m *RetrieveTokenForContinuousIntegrationRequest) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

func (m *RetrieveTokenForContinuousIntegrationRequest) GetCiProvider() storage.ContinuousIntegrationType {
	if m != nil {
		return m.CiProvider
	}
	return storage.ContinuousIntegrationType_UNSUPPORTED_CONTINUOUS_INTEGRATION
}

func (m *RetrieveTokenForContinuousIntegrationRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RetrieveTokenForContinuousIntegrationRequest) Clone() *RetrieveTokenForContinuousIntegrationRequest {
	if m == nil {
		return nil
	}
	cloned := new(RetrieveTokenForContinuousIntegrationRequest)
	*cloned = *m

	return cloned
}

type RetrieveTokenForContinuousIntegrationResponse struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveTokenForContinuousIntegrationResponse) Reset() {
	*m = RetrieveTokenForContinuousIntegrationResponse{}
}
func (m *RetrieveTokenForContinuousIntegrationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*RetrieveTokenForContinuousIntegrationResponse) ProtoMessage() {}
func (*RetrieveTokenForContinuousIntegrationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f535114bb7ad7d43, []int{2}
}
func (m *RetrieveTokenForContinuousIntegrationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RetrieveTokenForContinuousIntegrationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RetrieveTokenForContinuousIntegrationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RetrieveTokenForContinuousIntegrationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveTokenForContinuousIntegrationResponse.Merge(m, src)
}
func (m *RetrieveTokenForContinuousIntegrationResponse) XXX_Size() int {
	return m.Size()
}
func (m *RetrieveTokenForContinuousIntegrationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveTokenForContinuousIntegrationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveTokenForContinuousIntegrationResponse proto.InternalMessageInfo

func (m *RetrieveTokenForContinuousIntegrationResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *RetrieveTokenForContinuousIntegrationResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RetrieveTokenForContinuousIntegrationResponse) Clone() *RetrieveTokenForContinuousIntegrationResponse {
	if m == nil {
		return nil
	}
	cloned := new(RetrieveTokenForContinuousIntegrationResponse)
	*cloned = *m

	return cloned
}

func init() {
	proto.RegisterType((*GetContinuousIntegrationConfigsResponse)(nil), "v1.GetContinuousIntegrationConfigsResponse")
	proto.RegisterType((*RetrieveTokenForContinuousIntegrationRequest)(nil), "v1.RetrieveTokenForContinuousIntegrationRequest")
	proto.RegisterType((*RetrieveTokenForContinuousIntegrationResponse)(nil), "v1.RetrieveTokenForContinuousIntegrationResponse")
}

func init() {
	proto.RegisterFile("api/v1/continuous_integration.proto", fileDescriptor_f535114bb7ad7d43)
}

var fileDescriptor_f535114bb7ad7d43 = []byte{
	// 497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0xee, 0xe4, 0xd7, 0x4f, 0xe9, 0x04, 0x21, 0x34, 0x6c, 0x5c, 0x13, 0xa5, 0xa9, 0x69, 0xd5,
	0x10, 0xc8, 0x04, 0x07, 0x56, 0x5d, 0xb0, 0x68, 0x0a, 0xa8, 0x12, 0x8b, 0xca, 0x74, 0x81, 0xd8,
	0x44, 0x66, 0x72, 0xb0, 0x46, 0x6d, 0xe6, 0x98, 0x99, 0x89, 0xd5, 0xa8, 0x62, 0xc3, 0x03, 0x74,
	0xc3, 0x86, 0xe7, 0x61, 0xc5, 0xb2, 0x12, 0x2f, 0x80, 0x02, 0x0f, 0x82, 0x7c, 0x49, 0x4b, 0xa5,
	0xc4, 0x98, 0x9d, 0x75, 0xf4, 0xdd, 0xfc, 0x9d, 0x63, 0xd3, 0xfb, 0x61, 0x2c, 0x7b, 0x89, 0xdf,
	0x13, 0xa8, 0xac, 0x54, 0x13, 0x9c, 0x98, 0xa1, 0x54, 0x16, 0x22, 0x1d, 0x5a, 0x89, 0x8a, 0xc7,
	0x1a, 0x2d, 0xb2, 0x5a, 0xe2, 0xbb, 0x8d, 0x08, 0x31, 0x3a, 0x81, 0x5e, 0x8a, 0x0f, 0x95, 0x42,
	0x9b, 0x01, 0x4c, 0x8e, 0x70, 0x59, 0x21, 0x03, 0xe3, 0xd8, 0x4e, 0x8b, 0xd9, 0xdd, 0x4b, 0xe9,
	0xf1, 0x78, 0x2e, 0xe5, 0x6e, 0x19, 0x8b, 0x3a, 0x8c, 0xa0, 0xd4, 0xd0, 0x93, 0x74, 0xe7, 0x25,
	0xd8, 0xc1, 0x25, 0xe4, 0xe0, 0x0a, 0x31, 0x40, 0xf5, 0x5e, 0x46, 0x26, 0x00, 0x13, 0xa3, 0x32,
	0xc0, 0x9e, 0xd1, 0x55, 0x91, 0x8f, 0x1c, 0xd2, 0xfa, 0xaf, 0x5d, 0xef, 0x6f, 0xf1, 0xc2, 0x82,
	0x97, 0xf0, 0x83, 0x39, 0xc9, 0x3b, 0x27, 0xf4, 0x51, 0x00, 0x56, 0x4b, 0x48, 0xe0, 0x08, 0x8f,
	0x41, 0xbd, 0x40, 0xbd, 0x90, 0x18, 0xc0, 0x87, 0x09, 0x18, 0xcb, 0xd6, 0xe9, 0x4d, 0x39, 0x1a,
	0xda, 0x14, 0xea, 0x90, 0x16, 0x69, 0xaf, 0x05, 0xab, 0x72, 0x94, 0x31, 0xd9, 0x80, 0xd6, 0x85,
	0x1c, 0xc6, 0x1a, 0x13, 0x39, 0x02, 0xed, 0xd4, 0x5a, 0xa4, 0x7d, 0xbb, 0xef, 0x95, 0xe7, 0x39,
	0x9a, 0xc6, 0x10, 0x50, 0x21, 0x0f, 0x0b, 0x96, 0x17, 0xd0, 0x6e, 0xc5, 0x3c, 0x45, 0x03, 0x9b,
	0xf4, 0x56, 0x28, 0x04, 0x18, 0x73, 0x2d, 0x54, 0x3d, 0x9f, 0x65, 0x12, 0xfd, 0x8b, 0xff, 0x69,
	0x63, 0xa1, 0xc8, 0x6b, 0xd0, 0x89, 0x14, 0xc0, 0xce, 0xa8, 0xb3, 0xac, 0x70, 0x76, 0x87, 0x27,
	0x3e, 0x0f, 0xc0, 0xe0, 0x44, 0x0b, 0xd8, 0x9b, 0x1e, 0xec, 0xbb, 0x95, 0x2a, 0xf6, 0x76, 0x3e,
	0x7d, 0xff, 0xf5, 0xb9, 0xb6, 0xc9, 0x36, 0xae, 0xdf, 0x57, 0xf7, 0x8f, 0x75, 0xf7, 0xce, 0xe4,
	0xe8, 0x23, 0x3b, 0xa5, 0xee, 0x2b, 0x69, 0x16, 0xbb, 0x1b, 0xb6, 0x96, 0xda, 0x3f, 0x4f, 0xef,
	0xca, 0x7d, 0x98, 0x3e, 0x56, 0x3c, 0x0c, 0xcf, 0xcb, 0xec, 0x1b, 0xcc, 0x5d, 0x6e, 0xcf, 0xce,
	0x09, 0x5d, 0x3f, 0xc4, 0x25, 0xd6, 0xac, 0xd2, 0x6b, 0x56, 0x2c, 0x63, 0x3b, 0x4b, 0xb3, 0xe1,
	0x95, 0xa4, 0xd9, 0x25, 0x1d, 0x26, 0xe8, 0xbd, 0x7d, 0x38, 0x01, 0x0b, 0x55, 0x57, 0x71, 0xd5,
	0xce, 0xbc, 0xef, 0xce, 0x5f, 0xfb, 0xfe, 0x4a, 0xe8, 0x76, 0xa5, 0x13, 0x63, 0x8f, 0x73, 0xbf,
	0xea, 0x5f, 0x87, 0xeb, 0xff, 0x03, 0xa3, 0x58, 0xd4, 0xd3, 0x2c, 0x37, 0xf7, 0x1e, 0x94, 0xe4,
	0xd6, 0x85, 0x62, 0x37, 0x3b, 0xf1, 0x5d, 0xd2, 0xd9, 0xe3, 0xdf, 0x66, 0x4d, 0x72, 0x31, 0x6b,
	0x92, 0x1f, 0xb3, 0x26, 0xf9, 0xf2, 0xb3, 0xb9, 0x42, 0x1d, 0x89, 0xdc, 0xd8, 0x50, 0x1c, 0x6b,
	0x3c, 0xcd, 0xff, 0x23, 0x3c, 0x8c, 0x25, 0x4f, 0xfc, 0xb7, 0xb5, 0xc4, 0x7f, 0xb3, 0xf2, 0xee,
	0x46, 0x36, 0x7b, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xcc, 0xb4, 0x41, 0xf3, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContinuousIntegrationServiceClient is the client API for ContinuousIntegrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConnInterface.NewStream.
type ContinuousIntegrationServiceClient interface {
	GetContinuousIntegration(ctx context.Context, in *ResourceByID, opts ...grpc.CallOption) (*storage.ContinuousIntegrationConfig, error)
	ListContinuousIntegrations(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetContinuousIntegrationConfigsResponse, error)
	PostContinuousIntegration(ctx context.Context, in *storage.ContinuousIntegrationConfig, opts ...grpc.CallOption) (*storage.ContinuousIntegrationConfig, error)
	DeleteContinuousIntegration(ctx context.Context, in *ResourceByID, opts ...grpc.CallOption) (*Empty, error)
	RetrieveTokenForContinuousIntegration(ctx context.Context, in *RetrieveTokenForContinuousIntegrationRequest, opts ...grpc.CallOption) (*RetrieveTokenForContinuousIntegrationResponse, error)
}

type continuousIntegrationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewContinuousIntegrationServiceClient(cc grpc.ClientConnInterface) ContinuousIntegrationServiceClient {
	return &continuousIntegrationServiceClient{cc}
}

func (c *continuousIntegrationServiceClient) GetContinuousIntegration(ctx context.Context, in *ResourceByID, opts ...grpc.CallOption) (*storage.ContinuousIntegrationConfig, error) {
	out := new(storage.ContinuousIntegrationConfig)
	err := c.cc.Invoke(ctx, "/v1.ContinuousIntegrationService/GetContinuousIntegration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *continuousIntegrationServiceClient) ListContinuousIntegrations(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetContinuousIntegrationConfigsResponse, error) {
	out := new(GetContinuousIntegrationConfigsResponse)
	err := c.cc.Invoke(ctx, "/v1.ContinuousIntegrationService/ListContinuousIntegrations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *continuousIntegrationServiceClient) PostContinuousIntegration(ctx context.Context, in *storage.ContinuousIntegrationConfig, opts ...grpc.CallOption) (*storage.ContinuousIntegrationConfig, error) {
	out := new(storage.ContinuousIntegrationConfig)
	err := c.cc.Invoke(ctx, "/v1.ContinuousIntegrationService/PostContinuousIntegration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *continuousIntegrationServiceClient) DeleteContinuousIntegration(ctx context.Context, in *ResourceByID, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/v1.ContinuousIntegrationService/DeleteContinuousIntegration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *continuousIntegrationServiceClient) RetrieveTokenForContinuousIntegration(ctx context.Context, in *RetrieveTokenForContinuousIntegrationRequest, opts ...grpc.CallOption) (*RetrieveTokenForContinuousIntegrationResponse, error) {
	out := new(RetrieveTokenForContinuousIntegrationResponse)
	err := c.cc.Invoke(ctx, "/v1.ContinuousIntegrationService/RetrieveTokenForContinuousIntegration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContinuousIntegrationServiceServer is the server API for ContinuousIntegrationService service.
type ContinuousIntegrationServiceServer interface {
	GetContinuousIntegration(context.Context, *ResourceByID) (*storage.ContinuousIntegrationConfig, error)
	ListContinuousIntegrations(context.Context, *Empty) (*GetContinuousIntegrationConfigsResponse, error)
	PostContinuousIntegration(context.Context, *storage.ContinuousIntegrationConfig) (*storage.ContinuousIntegrationConfig, error)
	DeleteContinuousIntegration(context.Context, *ResourceByID) (*Empty, error)
	RetrieveTokenForContinuousIntegration(context.Context, *RetrieveTokenForContinuousIntegrationRequest) (*RetrieveTokenForContinuousIntegrationResponse, error)
}

// UnimplementedContinuousIntegrationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedContinuousIntegrationServiceServer struct {
}

func (*UnimplementedContinuousIntegrationServiceServer) GetContinuousIntegration(ctx context.Context, req *ResourceByID) (*storage.ContinuousIntegrationConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContinuousIntegration not implemented")
}
func (*UnimplementedContinuousIntegrationServiceServer) ListContinuousIntegrations(ctx context.Context, req *Empty) (*GetContinuousIntegrationConfigsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListContinuousIntegrations not implemented")
}
func (*UnimplementedContinuousIntegrationServiceServer) PostContinuousIntegration(ctx context.Context, req *storage.ContinuousIntegrationConfig) (*storage.ContinuousIntegrationConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostContinuousIntegration not implemented")
}
func (*UnimplementedContinuousIntegrationServiceServer) DeleteContinuousIntegration(ctx context.Context, req *ResourceByID) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContinuousIntegration not implemented")
}
func (*UnimplementedContinuousIntegrationServiceServer) RetrieveTokenForContinuousIntegration(ctx context.Context, req *RetrieveTokenForContinuousIntegrationRequest) (*RetrieveTokenForContinuousIntegrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveTokenForContinuousIntegration not implemented")
}

func RegisterContinuousIntegrationServiceServer(s *grpc.Server, srv ContinuousIntegrationServiceServer) {
	s.RegisterService(&_ContinuousIntegrationService_serviceDesc, srv)
}

func _ContinuousIntegrationService_GetContinuousIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContinuousIntegrationServiceServer).GetContinuousIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ContinuousIntegrationService/GetContinuousIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContinuousIntegrationServiceServer).GetContinuousIntegration(ctx, req.(*ResourceByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContinuousIntegrationService_ListContinuousIntegrations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContinuousIntegrationServiceServer).ListContinuousIntegrations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ContinuousIntegrationService/ListContinuousIntegrations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContinuousIntegrationServiceServer).ListContinuousIntegrations(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContinuousIntegrationService_PostContinuousIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(storage.ContinuousIntegrationConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContinuousIntegrationServiceServer).PostContinuousIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ContinuousIntegrationService/PostContinuousIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContinuousIntegrationServiceServer).PostContinuousIntegration(ctx, req.(*storage.ContinuousIntegrationConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContinuousIntegrationService_DeleteContinuousIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContinuousIntegrationServiceServer).DeleteContinuousIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ContinuousIntegrationService/DeleteContinuousIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContinuousIntegrationServiceServer).DeleteContinuousIntegration(ctx, req.(*ResourceByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContinuousIntegrationService_RetrieveTokenForContinuousIntegration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveTokenForContinuousIntegrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContinuousIntegrationServiceServer).RetrieveTokenForContinuousIntegration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ContinuousIntegrationService/RetrieveTokenForContinuousIntegration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContinuousIntegrationServiceServer).RetrieveTokenForContinuousIntegration(ctx, req.(*RetrieveTokenForContinuousIntegrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContinuousIntegrationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ContinuousIntegrationService",
	HandlerType: (*ContinuousIntegrationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetContinuousIntegration",
			Handler:    _ContinuousIntegrationService_GetContinuousIntegration_Handler,
		},
		{
			MethodName: "ListContinuousIntegrations",
			Handler:    _ContinuousIntegrationService_ListContinuousIntegrations_Handler,
		},
		{
			MethodName: "PostContinuousIntegration",
			Handler:    _ContinuousIntegrationService_PostContinuousIntegration_Handler,
		},
		{
			MethodName: "DeleteContinuousIntegration",
			Handler:    _ContinuousIntegrationService_DeleteContinuousIntegration_Handler,
		},
		{
			MethodName: "RetrieveTokenForContinuousIntegration",
			Handler:    _ContinuousIntegrationService_RetrieveTokenForContinuousIntegration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/continuous_integration.proto",
}

func (m *GetContinuousIntegrationConfigsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetContinuousIntegrationConfigsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetContinuousIntegrationConfigsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Configs) > 0 {
		for iNdEx := len(m.Configs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Configs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintContinuousIntegration(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *RetrieveTokenForContinuousIntegrationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RetrieveTokenForContinuousIntegrationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RetrieveTokenForContinuousIntegrationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CiProvider != 0 {
		i = encodeVarintContinuousIntegration(dAtA, i, uint64(m.CiProvider))
		i--
		dAtA[i] = 0x10
	}
	if len(m.IdToken) > 0 {
		i -= len(m.IdToken)
		copy(dAtA[i:], m.IdToken)
		i = encodeVarintContinuousIntegration(dAtA, i, uint64(len(m.IdToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RetrieveTokenForContinuousIntegrationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RetrieveTokenForContinuousIntegrationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RetrieveTokenForContinuousIntegrationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = encodeVarintContinuousIntegration(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintContinuousIntegration(dAtA []byte, offset int, v uint64) int {
	offset -= sovContinuousIntegration(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetContinuousIntegrationConfigsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Configs) > 0 {
		for _, e := range m.Configs {
			l = e.Size()
			n += 1 + l + sovContinuousIntegration(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RetrieveTokenForContinuousIntegrationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.IdToken)
	if l > 0 {
		n += 1 + l + sovContinuousIntegration(uint64(l))
	}
	if m.CiProvider != 0 {
		n += 1 + sovContinuousIntegration(uint64(m.CiProvider))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RetrieveTokenForContinuousIntegrationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + sovContinuousIntegration(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovContinuousIntegration(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozContinuousIntegration(x uint64) (n int) {
	return sovContinuousIntegration(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetContinuousIntegrationConfigsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContinuousIntegration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetContinuousIntegrationConfigsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetContinuousIntegrationConfigsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Configs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContinuousIntegration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Configs = append(m.Configs, &storage.ContinuousIntegrationConfig{})
			if err := m.Configs[len(m.Configs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipContinuousIntegration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RetrieveTokenForContinuousIntegrationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContinuousIntegration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RetrieveTokenForContinuousIntegrationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RetrieveTokenForContinuousIntegrationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContinuousIntegration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CiProvider", wireType)
			}
			m.CiProvider = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContinuousIntegration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CiProvider |= storage.ContinuousIntegrationType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipContinuousIntegration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RetrieveTokenForContinuousIntegrationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContinuousIntegration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RetrieveTokenForContinuousIntegrationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RetrieveTokenForContinuousIntegrationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContinuousIntegration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipContinuousIntegration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthContinuousIntegration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipContinuousIntegration(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowContinuousIntegration
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowContinuousIntegration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowContinuousIntegration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthContinuousIntegration
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupContinuousIntegration
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthContinuousIntegration
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthContinuousIntegration        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowContinuousIntegration          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupContinuousIntegration = fmt.Errorf("proto: unexpected end of group")
)
