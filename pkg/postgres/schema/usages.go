// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableUsagesStmt holds the create statement for table `usages`.
	CreateTableUsagesStmt = &postgres.CreateStmts{
		GormModel: (*Usages)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// UsagesSchema is the go schema for table `usages`.
	UsagesSchema = func() *walker.Schema {
		schema := GetSchemaForTable("usages")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.Usage)(nil)), "usages")
		RegisterTable(schema, CreateTableUsagesStmt)
		return schema
	}()
)

const (
	// UsagesTableName specifies the name of the table in postgres.
	UsagesTableName = "usages"
)

// Usages holds the Gorm model for Postgres table `usages`.
type Usages struct {
	ID         string `gorm:"column:id;type:uuid;primaryKey"`
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
